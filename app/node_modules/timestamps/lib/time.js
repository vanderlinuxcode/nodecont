var zpad, regex, HOUR, MINUTE, SECOND, time;
zpad = require('zpad');
regex = {
  full: /^(\d\d):([0-5]\d):([0-5]\d)\.(\d{3})$/,
  ass: /^(\d):([0-5]\d):([0-5]\d)\.(\d{2})$/
};
HOUR = 60 * 60 * 1000;
MINUTE = 60 * 1000;
SECOND = 1000;
time = {
  parse: function(str){
    var ASS, res, hh, mm, ss, ms;
    ASS = 1;
    if (res = str.match(regex.full)) {} else if (res = str.match(regex.ass)) {
      ASS = 10;
    } else {
      res = [0, 0, 0, 0, 0];
    }
    hh = parseInt(res[1], 10);
    mm = parseInt(res[2], 10);
    ss = parseInt(res[3], 10);
    ms = parseInt(res[4], 10);
    return ms * ASS + ss * SECOND + mm * MINUTE + hh * HOUR;
  },
  parts: function(ms){
    var hh, mm, ss, cs;
    hh = ~~(ms / HOUR);
    mm = ~~((ms - hh * HOUR) / MINUTE);
    ss = ~~((ms - hh * HOUR - mm * MINUTE) / SECOND);
    cs = ~~((ms - hh * HOUR - mm * MINUTE - ss * SECOND) / 10 + 0.5);
    ms = ~~(ms - hh * HOUR - mm * MINUTE - ss * SECOND + 0.5);
    return {
      hh: hh,
      mm: mm,
      ss: ss,
      cs: cs,
      ms: ms
    };
  },
  stamp: function(ms){
    var ref$, hh, mm, ss;
    ref$ = time.parts(ms), hh = ref$.hh, mm = ref$.mm, ss = ref$.ss, ms = ref$.ms;
    return zpad(hh) + ":" + zpad(mm) + ":" + zpad(ss) + "." + zpad(ms, 3);
  },
  ass: function(ms){
    var ref$, hh, mm, ss, cs;
    ref$ = time.parts(ms), hh = ref$.hh, mm = ref$.mm, ss = ref$.ss, cs = ref$.cs;
    return hh + ":" + zpad(mm) + ":" + zpad(ss) + "." + zpad(cs);
  }
};
module.exports = time;